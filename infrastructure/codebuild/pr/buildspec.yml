version: 0.2
phases:
  install:
    runtime-versions:
      nodejs: "$NODE_VERSION"
    commands:
      - npm install -g npm@7
      - npm run preinstall
      - npm install
      - npm run postinstall
  build:
    commands:
      - npm run lint
      - npm run license-check
      - npm run build
      # # make sure that functions_package.ts compiles but don't do it in npm run build to avoid wasting time for developers
      # - npm run extra:build
      # - npm test
      # # prepare env
      # - cd ${CODEBUILD_SRC_DIR}/infrastructure/codebuild/pr
      # - . ./setupEnv.sh
      # # Create empty dist folder to make cdk work
      # - cd ${CODEBUILD_SRC_DIR}/frontend/root-config
      # - mkdir dist
      # # deploy PR stack
      # - cd ${CODEBUILD_SRC_DIR}/infrastructure/apps/test
      # - npx cdk deploy PR* --require-approval=never --outputs-file gxpcPersonal.json
      # # create personal config.json to use in the frontend stack
      # - cd ${CODEBUILD_SRC_DIR}
      # - npm run get-endpoint
      # # run functional tests
      # - cd ${CODEBUILD_SRC_DIR}
      # - npm run features
      # # build frontend single-spa root config
      # - cd ${CODEBUILD_SRC_DIR}/frontend/root-config
      # - npm run build:webpack
      # # build frontend single-spa main app
      # - cd ${CODEBUILD_SRC_DIR}/frontend/main-app
      # - npm run build
      # deploy PR stack
      # - cd ${CODEBUILD_SRC_DIR}/infrastructure/apps/test
      # - npx cdk deploy FrontEndSPA --require-approval=never
reports:
  # Backend
  UnitTest:
    files:
      - junit.xml
    file-format: JUNITXML
  Coverage:
    files:
      - clover.xml
    file-format: CLOVERXML
    base-directory: coverage
  # Frontend
  FrontendUnitTest:
    files:
      - junit.xml
    file-format: JUNITXML
    base-directory: frontend/main-app
  FrontendCoverage:
    files:
      - clover.xml
    file-format: CLOVERXML
    base-directory: frontend/main-app/coverage
  # Functional
  FunctionalTest:
    files:
      - cucumber_report.json
    file-format: CUCUMBERJSON
